version: '2'
services:
  link-1:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
    ports:
      - 1313:1313
    cap_add:
      - NET_ADMIN
    network_mode: 'host'
    environment:
      LOGGER_LEVEL: debug
      HOSTNAME: link-1
      ETCD_HOSTS: http://172.17.0.1:32379
      INTERFACE: eth10
      USER: link
      PASSWORD: password
    command: reflex -r '\.go$$' -R '_test\.go$$' -s -- sh -c 'go build && ./link'
    depends_on:
      - etcd
  link-2:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
    ports:
      - 1314:1314
    cap_add:
      - NET_ADMIN
    network_mode: 'host'
    environment:
      LOGGER_LEVEL: debug
      HOSTNAME: link-2
      ETCD_HOSTS: http://172.17.0.1:32379
      INTERFACE: eth11
      USER: link
      PASSWORD: password
      PORT: 1314
      # command: reflex --all -r 'link' -s -- sh -c './link'
    command: reflex -r '\.go$$' -R '_test\.go$$' -s -- sh -c 'go build && ./link'
    depends_on:
      - etcd
  link-3:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
    ports:
      - 1315:1315
    cap_add:
      - NET_ADMIN
    network_mode: 'host'
    environment:
      LOGGER_LEVEL: debug
      HOSTNAME: link-3
      ETCD_HOSTS: http://172.17.0.1:32379
      INTERFACE: eth12
      USER: link
      PASSWORD: password
      PORT: 1315
    # command: reflex --all -r 'link' -s -- sh -c './link'
    command: reflex -r '\.go$$' -R '_test\.go$$' -s -- sh -c 'go build && ./link'
    depends_on:
      - etcd

  test:
    build: .
    volumes:
      - ./:/go/src/github.com/Scalingo/link
    environment:
      GO_ENV: test
    stop_signal: SIGKILL
    command: "tail -F /dev/null"

  etcd:
    volumes:
      - ./docker/etcd:/data/etcd
    image: quay.io/coreos/etcd:v3.2.11
    command: etcd --name etcd-cluster --data-dir /data/etcd --listen-client-urls http://0.0.0.0:2379 --listen-peer-urls http://0.0.0.0:2380 --advertise-client-urls http://172.17.0.1:22379
    ports:
      - 32379:2379

